`timescale 1ns / 1ps
module alu_8bit_clk_gated_tb;

    reg clk;
    reg clk_en;
    reg [7:0] a, b;
    reg [2:0] sel;
    wire [7:0] y;

    // Instantiate DUT
    alu_8bit_clk_gated dut (
        .clk(clk),
        .clk_en(clk_en),
        .a(a),
        .b(b),
        .sel(sel),
        .y(y)
    );

    // Clock Generation
    always #5 clk = ~clk;

    initial begin
        clk = 0;
        clk_en = 1;   // Enable clock initially

        a = 8'b00001010; // 10
        b = 8'b00000101; // 5

        sel = 3'b000; #10;  // ADD
        sel = 3'b001; #10;  // SUB
        sel = 3'b010; #10;  // AND
        sel = 3'b011; #10;  // OR
        sel = 3'b100; #10;  // XOR
        sel = 3'b101; #10;  // NOT
        sel = 3'b110; #10;  // LSHIFT
        sel = 3'b111; #10;  // RSHIFT

        // Now disable clock to test power saving
        clk_en = 0; #50;  

        // Re-enable clock
        clk_en = 1; sel = 3'b000; #10;

        $finish;
    end

endmodule
